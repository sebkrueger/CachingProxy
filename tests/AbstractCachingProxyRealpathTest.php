<?php/** * This file is part of secra/CachingProxy. * * (c) Sebastian Krüger <krueger@secra.de> * * For the full copyright and license information, please view the LICENSE * file that was distributed with this source code. */namespace secra\CachingProxy\Tests;use secra\CachingProxy\AbstractCachingProxyMockClassRealpath;// include Testclassesrequire_once 'AbstractCachingProxyMockClassRealpath.php';/** * CachingProxyTestRealpath * * @category test * @package de.secra.cachingproxy * @author Sebastian Krüger <krueger@secra.de> * @copyright 2014 Sebastian Krüger * @license http://www.opensource.org/licenses/MIT The MIT License */class AbstractCachingProxyTestRealpath extends \PHPUnit_Framework_TestCase{    /**     * @test     * @covers secra\Cachingproxy\AbstractCachingProxy::makeAbsolutPath()     */    public function testMakeAbsolutPath()    {        // Build reflection of private function        $method = new \ReflectionMethod('\secra\CachingProxy\AbstractCachingProxyMockClassRealpath', 'makeAbsolutPath');        $method->setAccessible(true);        // You can't test this function via vfs file system : https://github.com/mikey179/vfsStream/wiki/Known-Issues        // and with real test file system you have fragile test because of different file systems        // but is is worth a test, if function return false on not existing path        // TODO: Don't work now because of preload realpath override function -> have to think about it        // $this->assertFalse($method->invoke(new AbstractCachingProxyMockClassRealpath("/","/cache"), "/this/path/wont/exists"));    }}